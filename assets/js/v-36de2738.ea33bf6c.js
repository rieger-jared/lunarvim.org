"use strict";(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[2767],{9072:(s,a,n)=>{n.r(a),n.d(a,{data:()=>e});const e={key:"v-36de2738",path:"/languages/json.html",title:"JSON",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Install Syntax Highlighting",slug:"install-syntax-highlighting",children:[]},{level:2,title:"Supported language servers",slug:"supported-language-servers",children:[]},{level:2,title:"Supported formatters",slug:"supported-formatters",children:[]}],filePathRelative:"languages/json.md",git:{updatedTime:1636199576e3,contributors:[{name:"kylo252",email:"59826753+kylo252@users.noreply.github.com",commits:2},{name:"nzlov",email:"wfhtqp@gmail.com",commits:1}]}}},7483:(s,a,n)=>{n.r(a),n.d(a,{default:()=>l});const e=(0,n(6252).uE)('<h1 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> JSON</h1><h2 id="install-syntax-highlighting" tabindex="-1"><a class="header-anchor" href="#install-syntax-highlighting" aria-hidden="true">#</a> Install Syntax Highlighting</h2><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token punctuation">:</span>TSInstall json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="supported-language-servers" tabindex="-1"><a class="header-anchor" href="#supported-language-servers" aria-hidden="true">#</a> Supported language servers</h2><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>json <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;jsonls&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rome&quot;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="supported-formatters" tabindex="-1"><a class="header-anchor" href="#supported-formatters" aria-hidden="true">#</a> Supported formatters</h2><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>json <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;fixjson&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;prettier&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;prettier_d_slim&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;prettierd&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span> <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',7),t={},l=(0,n(3744).Z)(t,[["render",function(s,a){return e}]])},3744:(s,a)=>{a.Z=(s,a)=>{for(const[n,e]of a)s[n]=e;return s}}}]);